/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
       if (head == null) {
			return null;
		}
        
        if (head.next == null && (n == 0 || n == 1)) {
			return null;
		}
        
       int size  = 0;
       ListNode temp = head;
      
        while(temp != null){
            size++;
            temp = temp.next;
        }
        
        int indexToRemove = size - n;
        
        temp = head;
        
        ListNode prev = head;
        for(int i=0; i < indexToRemove ; i++)
        {
            prev = temp;
            temp = temp.next;
        }
          System.out.println(temp.val);
        
        
        if(indexToRemove == 0){
           head = head.next;
        }
        
        prev.next = temp.next;    
        return head;
    }
}
