class Solution {
    public int[] gardenNoAdj(int n, int[][] paths) {
      int[] res = new int[n];
        Map<Integer, List<Integer>> map  = new HashMap<>();
        
         
        for(int i=0; i <= n ; i++){
           map.put(i, new ArrayList<>());
        }
        for(int[] a: paths){
            int x = a[0]-1;
            int y = a[1]-1;
            map.get(x).add(y);
            map.get(y).add(x);
        }
        
        for(int i=0; i < n ; i++){
            boolean[] seen = new boolean[5];
            //for every neighbor i find out which color is assigned(already stored in res[nighbor]) and i mark that color as true in seen to not repeat that color as it is assigned to 'i' ka neighbor.
            for(int j : map.get(i)){
                seen[res[j]] = true;
            }
            
            //whichever color is left i assign to the current garden and break.
            for(int k=1; k <=4; k++){
                if(!seen[k]){
                    res[i] = k;
                    break;
                }
            }
        }
        return res;
    }
}
