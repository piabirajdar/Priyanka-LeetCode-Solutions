class Solution {
    public long maxSum(List<Integer> nums, int m, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int sum = 0;
        int maxSum = 0;
        
        for (int i = 0; i < k; i++) {
            sum += nums[i];
            map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);
        }
        
        if (map.size() >= m) {
            maxSum = sum;
        }
        
        for (int i = 1; i <= nums.length - k; i++) {
            sum -= nums[i - 1];
            sum += nums[i + k - 1];
            
            map.put(nums[i - 1], map.get(nums[i - 1]) - 1);
            if (map.get(nums[i - 1]) <= 0) {
                map.remove(nums[i - 1]);
            }
            
            map.put(nums[i + k - 1], map.getOrDefault(nums[i + k - 1], 0) + 1);
            
            if (map.size() >= m) {
                maxSum = Math.max(maxSum, sum);
            }
        }
        
        return maxSum;
    }
}
