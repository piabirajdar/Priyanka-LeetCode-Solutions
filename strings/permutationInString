class Solution {
    public boolean checkInclusion(String s1, String s2) {
        if(s1.length() > s2.length())
        return false;

        int[] firstFreq = new int[26];
        int[] secondFreq = new int[26];

        for(char c : s1.toCharArray()){
            firstFreq[c-'a']++;
        }

        for(int i=0; i < s2.length(); i++){
            
            if(i >= s1.length()){
                secondFreq[s2.charAt(i-s1.length())-'a']--;
            }
            secondFreq[s2.charAt(i) - 'a']++;
            if(isPermutation(firstFreq, secondFreq))
            return true;
        }
        return false;
    }

    public boolean isPermutation(int[] first, int[] second){
        for(int i=0; i < 26; i++){
            if(first[i] != second[i])
            return false;
        }
        return true;
    }
}
