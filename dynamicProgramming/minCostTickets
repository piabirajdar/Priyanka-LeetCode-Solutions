class Solution {
    public int mincostTickets(int[] days, int[] costs) {
         int n = days.length;
        int[] dp = new int[n+1];
        for(int i = 0; i < n; ++i) dp[i] = 365*costs[0];
        
        for(int i=days.length-1; i >=0; i--){
           int d7 = i;
            int d30 = i;
            int oneDayCost = dp[i+1]+costs[0];
            while(d7 < n && days[d7] < days[i]+7) d7++;
            while(d30 < n && days[d30] < days[i] + 30) d30++;
            int sevenDayCost  = dp[d7]+costs[1];
            int thirtyDayCost = dp[d30]+costs[2];
            System.out.println("minCost " + oneDayCost + " " + sevenDayCost + " " + thirtyDayCost);
            dp[i] = Math.min(oneDayCost, Math.min(sevenDayCost, thirtyDayCost));
        }
       
        return dp[0];
    }
}
