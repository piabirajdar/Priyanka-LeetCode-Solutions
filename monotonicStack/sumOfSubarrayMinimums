class Solution {
    public int sumSubarrayMins(int[] arr) {
      Stack<Integer> st = new Stack<>();
      int MOD = 1000000007;
      int[] dp = new int[arr.length];
      for(int i=0; i < arr.length; i++){
          while(!st.isEmpty() && arr[st.peek()] >= arr[i]){
              st.pop();
          }

          if(!st.isEmpty()){
              int prevSmaller = st.peek();
              dp[i] = dp[prevSmaller] + (i - prevSmaller)*arr[i];
          } else {
              dp[i] = (i+1)*arr[i];
          }
          st.push(i);
      }  
      long min=0;

      for(int count: dp){
          min+=count;
          min%=MOD;
      }
      return (int)min;
    }
}
