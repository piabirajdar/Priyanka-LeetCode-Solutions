/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) {
        Stack<Integer> st = new Stack<>();
        List<Integer> res = new ArrayList<>();
        ListNode temp = head;int cnt=0;
        while(temp != null){
            while(!st.isEmpty() && temp.val > res.get(st.peek())){
               res.set(st.pop(), temp.val); 
            }
            st.push(cnt++);
            res.add(temp.val);
            temp = temp.next;
        }
        
        while(!st.isEmpty()){
            res.set(st.pop(), 0);
        }

        return res.stream().mapToInt(i->i).toArray();
    }
}
