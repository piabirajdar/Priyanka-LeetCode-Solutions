
class Solution {
    int ans;
    public int countPairs(TreeNode root, int distance) {
        ans=0;
        helper(root, distance);
        return ans;
    }

    public List<Integer> helper(TreeNode root, int distance){
        if(root == null) return new ArrayList<>();
        if(root.right == null && root.left == null){
            List<Integer> leaf = new ArrayList<>();
            leaf.add(1);
            return leaf;
        }

        List<Integer> left = helper(root.left, distance);
        List<Integer> right = helper(root.right, distance);

        for(int l : left){
            for(int r : right){
                if(l+r <= distance) ans++;
            }
        }

        List<Integer> returnList = new ArrayList<>();

        for(int l : left){
            if(l+1 <= distance)
            returnList.add(l+1);
        }
         for(int r : right){
            if(r+1 <= distance)
            returnList.add(r+1);
        }
        return returnList;
    }   
}
