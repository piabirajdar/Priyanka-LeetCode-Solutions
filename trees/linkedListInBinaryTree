/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSubPath(ListNode head, TreeNode root) {
      if(root == null) return false;
        if(root.val == head.val){
            if(foundPath(head, root)) return true;
        }
       if(isSubPath(head, root.left)) return true;
        return isSubPath(head, root.right);
    }

    public boolean foundPath(ListNode head, TreeNode root){
        if(head.val != root.val) return false;
        if(head.next == null) return true;
        if(root.left != null && foundPath(head.next, root.left)) return true;
        if(root.right != null && foundPath(head.next, root.right)) return true;
        return false;
    }
}
