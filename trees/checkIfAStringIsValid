/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
      Set<String> set;
    public boolean isValidSequence(TreeNode root, int[] arr) {
      set = new HashSet<>();
        String s="";
        for(int i : arr){
            s = s + i;
        }
        helper(root, new StringBuilder());
        return set.contains(s); 
    }

    public void helper(TreeNode root, StringBuilder sb){
        if(root == null) return;
        sb.append(root.val);
        if(root.left == null && root.right == null){
            set.add(sb.toString());
        }
        helper(root.left, sb);
        helper(root.right, sb);
        sb.deleteCharAt(sb.length()-1);
    }
}
