class Solution {
    public int maximumGain(String s, int x, int y) {
      Stack<Character> stack1 = new Stack<>();
        Stack<Character> stack2 = new Stack<>();
        
		//to make sure, x is always bigger
        int n = s.length(), ans = 0;
        if(x<y){
           maximumGain(new StringBuilder(s).reverse(), y, x);
        }
        
		
		//first pass, we check every character, if it's not 'b', we put it in a stack, if it's 'b', and the first element in the stack is 'a', then we pop it, and add x to the result.
        for(int i=0;i<n;i++){
            if(s.charAt(i)!='b'){
                stack1.push(s.charAt(i));
            }else{
                if(!stack1.isEmpty()&&stack1.peek()=='a'){
                    stack1.pop();
                    ans+=x;
                }else{
                    stack1.push(s.charAt(i));
                }
            }
        }
        
        //second pass, we use the stack we just got from pass one, and use another stack (stack2), and do the same thing to check 'ba'
		
        while(!stack1.isEmpty()){
            char ch = stack1.pop();
            if(ch!='b'){
                stack2.push(ch);
            }else{
                if(!stack2.isEmpty()&&stack2.peek()=='a'){
                    ans+=y;
                    stack2.pop();
                }else{
                    stack2.push(ch);
                }
            }
          
        }
        return ans;
    }
}
