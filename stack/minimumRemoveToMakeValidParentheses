class Solution {
    public String minRemoveToMakeValid(String s) {
       StringBuilder sb = new StringBuilder(s);
        Stack<Integer> st = new Stack<>();
          Set<Integer> result = new LinkedHashSet();
        for(int i=0; i < s.length(); i++){
            if(s.charAt(i) == '('){
                st.push(i);
            } else if(s.charAt(i) == ')') {
                if(!st.isEmpty()) st.pop();
                else {
                   result.add(i);
                }
            }
        }
        while(!st.isEmpty()){
           result.add(st.pop());
        }
        
        return constructParentheses(s, result);
    }
    
        
    private String constructParentheses(String s, Set<Integer> toRemove) {
        StringBuilder sb = new StringBuilder();
        
        for (int i = 0; i < s.length(); i++) {
            if (!toRemove.contains(i)) {
                sb.append(s.charAt(i));
            }
        }
        
        return sb.toString();
    }
}
