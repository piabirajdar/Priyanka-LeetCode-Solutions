class Solution {
    List<List<Integer>>  res;
    public List<List<Integer>> combinationSum2(int[] arr, int target) {
        res = new ArrayList<>();
        Arrays.sort(arr);
        helper(arr, 0, new ArrayList<>(), target);
        return res;
    }
    
    public void helper(int[] arr, int start, List<Integer> cur, int target){
        if(target == 0){
            res.add(new ArrayList<>(cur));
            return;
        }
        
        for(int i=start; i < arr.length; i++){
            if(i > start && arr[i] == arr[i-1]) continue;
            if(arr[i] > target) break;
            cur.add(arr[i]);
            helper(arr, i+1, cur, target-arr[i]);
            cur.remove(cur.size()-1);
        }
    }
}
