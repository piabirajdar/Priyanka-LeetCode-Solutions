class Solution {
    List<List<Integer>> ls = new ArrayList<>();
    public List<List<Integer>> findSubsequences(int[] nums) {
        List<Integer> cur = new ArrayList<>();
          Set<List<Integer>> res=new HashSet<>();
        helper(nums, cur, 0, res);
        
        for(List<Integer> i: res){
            ls.add(new ArrayList<>(i));
        }
        return ls;
        
    }
    public void helper(int[] nums, List<Integer> cur, int start, Set<List<Integer>> res){
        if(cur.size()>=2){
            res.add(new ArrayList<>(cur));
        }
        
        for(int i=start; i < nums.length; i++){
          // if(i >0 && nums[i] == nums[i-1]) continue;
            
            if(cur.size() > 0 && nums[i] >= cur.get(cur.size()-1)){
                cur.add(nums[i]);
                helper(nums, cur, i+1, res);
                cur.remove(cur.size()-1);
            } else if(cur.size()  == 0){
                cur.add(nums[i]);
                helper(nums, cur, i+1, res);
                  cur.remove(cur.size()-1);
            }
        }
    }
}
Console
